{"remainingRequest":"/Users/gaga/Desktop/Admin/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/gaga/Desktop/Admin/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/gaga/Desktop/Admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/gaga/Desktop/Admin/src/views/Games/Hotkeyword.vue?vue&type=template&id=ec4ec738&scoped=true&","dependencies":[{"path":"/Users/gaga/Desktop/Admin/src/views/Games/Hotkeyword.vue","mtime":1595385049853},{"path":"/Users/gaga/Desktop/Admin/node_modules/cache-loader/dist/cjs.js","mtime":1579254447879},{"path":"/Users/gaga/Desktop/Admin/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1579254448195},{"path":"/Users/gaga/Desktop/Admin/node_modules/cache-loader/dist/cjs.js","mtime":1579254447879},{"path":"/Users/gaga/Desktop/Admin/node_modules/vue-loader/lib/index.js","mtime":1579254448195}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\"div\", { staticClass: \"all\" }, [\n    _c(\n      \"div\",\n      [\n        !_vm.showdata\n          ? _c(\"Spin\", { staticClass: \"loading\", attrs: { size: \"large\" } })\n          : _vm._e(),\n        _vm.showdata\n          ? _c(\"Card\", { staticClass: \"main\", attrs: { bordered: false } }, [\n              _c(\"div\", { staticClass: \"words flex\" }, [\n                _c(\"p\", [_vm._v(\"选择语言\")]),\n                _c(\n                  \"div\",\n                  { staticClass: \"xiala\" },\n                  _vm._l(_vm.radioLanuage, function(item, index) {\n                    return _c(\n                      \"label\",\n                      { staticStyle: { \"margin-right\": \"20px\" } },\n                      [\n                        _c(\"input\", {\n                          directives: [\n                            {\n                              name: \"model\",\n                              rawName: \"v-model\",\n                              value: _vm.language,\n                              expression: \"language\"\n                            }\n                          ],\n                          staticStyle: { \"margin-right\": \"5px\" },\n                          attrs: { name: \"language\", type: \"radio\" },\n                          domProps: {\n                            value: item.key,\n                            checked: _vm._q(_vm.language, item.key)\n                          },\n                          on: {\n                            change: function($event) {\n                              _vm.language = item.key\n                            }\n                          }\n                        }),\n                        _vm._v(\n                          \"\\n            \" + _vm._s(item.name) + \"\\n          \"\n                        )\n                      ]\n                    )\n                  })\n                )\n              ]),\n              _c(\"div\", { staticClass: \"fenleiduoxuan flex\" }, [\n                _c(\"p\", [\n                  _vm._v(\"\\n          分类多选\\n          \"),\n                  _c(\"span\", [_vm._v(\"*默认空为全部\")])\n                ]),\n                _c(\n                  \"div\",\n                  { staticClass: \"check\" },\n                  _vm._l(_vm.checklist, function(item, index) {\n                    return _c(\n                      \"div\",\n                      {\n                        staticClass: \"itembox\",\n                        style: item.arr\n                          ? _vm.showwidth[0]\n                          : item.name == \"男性\" || item.name == \"女性\"\n                            ? _vm.showwidth[2]\n                            : _vm.showwidth[1],\n                        on: {\n                          click: function($event) {\n                            _vm.select($event)\n                          }\n                        }\n                      },\n                      [\n                        _c(\"div\", { staticClass: \"item\" }, [\n                          _c(\"label\", { attrs: { for: item.name } }, [\n                            _c(\"input\", {\n                              class: item.arr\n                                ? _vm.showclass[0]\n                                : _vm.showclass[1],\n                              attrs: { type: \"checkbox\", id: item.name },\n                              domProps: { value: item.name }\n                            }),\n                            _c(\n                              \"span\",\n                              {\n                                staticStyle: {\n                                  \"padding-left\": \"5px\",\n                                  \"font-weight\": \"bold\"\n                                }\n                              },\n                              [_vm._v(_vm._s(item.name))]\n                            )\n                          ])\n                        ]),\n                        _c(\n                          \"div\",\n                          { staticClass: \"childitem\" },\n                          _vm._l(item.arr, function(i) {\n                            return item.arr\n                              ? _c(\"label\", { attrs: { for: i.name } }, [\n                                  _c(\"input\", {\n                                    staticClass: \"child\",\n                                    attrs: { type: \"checkbox\", id: i.name },\n                                    domProps: { value: i.name }\n                                  }),\n                                  _c(\n                                    \"span\",\n                                    { staticStyle: { \"padding-left\": \"5px\" } },\n                                    [_vm._v(_vm._s(i.name))]\n                                  )\n                                ])\n                              : _vm._e()\n                          })\n                        )\n                      ]\n                    )\n                  })\n                )\n              ]),\n              _c(\"div\", { staticClass: \"fenci flex\" }, [\n                _c(\"p\", [_vm._v(\"是否分词\")]),\n                _c(\n                  \"div\",\n                  { staticClass: \"switch\" },\n                  [\n                    _c(\n                      \"i-switch\",\n                      {\n                        model: {\n                          value: _vm.switchbtn,\n                          callback: function($$v) {\n                            _vm.switchbtn = $$v\n                          },\n                          expression: \"switchbtn\"\n                        }\n                      },\n                      [\n                        _c(\"span\", { attrs: { slot: \"open\" }, slot: \"open\" }, [\n                          _vm._v(\"是\")\n                        ]),\n                        _c(\n                          \"span\",\n                          { attrs: { slot: \"close\" }, slot: \"close\" },\n                          [_vm._v(\"否\")]\n                        )\n                      ]\n                    )\n                  ],\n                  1\n                )\n              ]),\n              _c(\"div\", { staticClass: \"words flex\" }, [\n                _c(\"p\", [_vm._v(\"挑选词语\")]),\n                _c(\n                  \"div\",\n                  { staticClass: \"xiala\" },\n                  [\n                    _c(\n                      \"Select\",\n                      {\n                        staticStyle: { width: \"200px\" },\n                        model: {\n                          value: _vm.selectword,\n                          callback: function($$v) {\n                            _vm.selectword = $$v\n                          },\n                          expression: \"selectword\"\n                        }\n                      },\n                      _vm._l(_vm.wordlist, function(item) {\n                        return _c(\n                          \"Option\",\n                          { key: item.text, attrs: { value: item.val } },\n                          [_vm._v(_vm._s(item.text))]\n                        )\n                      })\n                    )\n                  ],\n                  1\n                )\n              ]),\n              _c(\"div\", { staticClass: \"words flex\" }, [\n                _c(\"p\", [_vm._v(\"搜索数\")]),\n                _c(\n                  \"div\",\n                  { staticClass: \"xiala\" },\n                  [\n                    _c(\"i-input\", {\n                      staticStyle: { width: \"300px\" },\n                      attrs: { placeholder: \"请输入搜索数,默认为0\" },\n                      model: {\n                        value: _vm.searchnum,\n                        callback: function($$v) {\n                          _vm.searchnum = $$v\n                        },\n                        expression: \"searchnum\"\n                      }\n                    })\n                  ],\n                  1\n                )\n              ]),\n              _c(\n                \"div\",\n                { staticClass: \"sure flex\" },\n                [\n                  _c(\n                    \"Button\",\n                    {\n                      staticStyle: {\n                        \"margin-right\": \"10px\",\n                        \"margin-left\": \"-10px\"\n                      },\n                      on: { click: _vm.resetdata }\n                    },\n                    [_vm._v(\"重置\")]\n                  ),\n                  _c(\n                    \"Button\",\n                    {\n                      attrs: { type: \"primary\" },\n                      on: { click: _vm.getdworddata }\n                    },\n                    [_vm._v(\"确定\")]\n                  )\n                ],\n                1\n              ),\n              _c(\"span\", { staticClass: \"maintip\" }, [\n                _vm._v(\"\\n        分类不准确，\\n        \"),\n                _c(\"span\", { on: { click: _vm.toupload } }, [_vm._v(\"点击\")]),\n                _vm._v(\" 下载编辑提交\\n      \")\n              ])\n            ])\n          : _vm._e(),\n        _vm.resultloading\n          ? _c(\"Spin\", { staticClass: \"loading\", attrs: { size: \"large\" } })\n          : _vm._e(),\n        _vm.showresult\n          ? _c(\"Card\", { staticClass: \"result\" }, [\n              _c(\n                \"span\",\n                {\n                  staticClass: \"close\",\n                  on: {\n                    click: function($event) {\n                      _vm.showresult = false\n                    }\n                  }\n                },\n                [_vm._v(\"✕\")]\n              ),\n              _c(\n                \"span\",\n                { staticClass: \"copy\", on: { click: _vm.outputword } },\n                [_vm._v(\"输出结果\")]\n              ),\n              _c(\"span\", { staticClass: \"keytip\" }, [\n                _vm._v(\"\\n        分词不准确，手动提交\\n        \"),\n                _c(\n                  \"span\",\n                  {\n                    staticClass: \"keyword\",\n                    on: {\n                      click: function($event) {\n                        _vm.postkeywordflag = true\n                      }\n                    }\n                  },\n                  [_vm._v(\"关键词\")]\n                )\n              ]),\n              _c(\n                \"span\",\n                { staticClass: \"resetword\", on: { click: _vm.resetword } },\n                [_vm._v(\"清空选项\")]\n              ),\n              _c(\"h2\", { staticClass: \"title\" }, [_vm._v(\"搜索结果\")]),\n              _c(\n                \"div\",\n                { staticClass: \"itembox\" },\n                _vm._l(_vm.resultdata, function(item, index) {\n                  return _c(\"div\", { staticClass: \"item\" }, [\n                    _c(\n                      \"label\",\n                      {\n                        attrs: { for: index },\n                        on: {\n                          click: function($event) {\n                            _vm.selectitem(index, item)\n                          }\n                        }\n                      },\n                      [\n                        _c(\"input\", {\n                          attrs: { type: \"checkbox\", id: index },\n                          domProps: { value: index }\n                        }),\n                        _c(\"span\", { staticStyle: { \"padding-left\": \"5px\" } }, [\n                          _vm._v(_vm._s(item))\n                        ])\n                      ]\n                    )\n                  ])\n                })\n              )\n            ])\n          : _vm._e(),\n        _c(\n          \"Modal\",\n          {\n            attrs: { title: \"输出结果\" },\n            model: {\n              value: _vm.outputflag,\n              callback: function($$v) {\n                _vm.outputflag = $$v\n              },\n              expression: \"outputflag\"\n            }\n          },\n          [\n            _c(\n              \"Button\",\n              {\n                staticClass: \"copydata\",\n                attrs: {\n                  type: \"primary\",\n                  \"data-clipboard-text\": this.afterresultdata.join(\"\")\n                },\n                on: { click: _vm.copy }\n              },\n              [_vm._v(\"复制结果\")]\n            ),\n            _c(\n              \"div\",\n              { staticClass: \"switchspace\" },\n              [\n                _vm._v(\"\\n        空格隔开:\\n        \"),\n                _c(\n                  \"i-switch\",\n                  {\n                    model: {\n                      value: _vm.switchspace,\n                      callback: function($$v) {\n                        _vm.switchspace = $$v\n                      },\n                      expression: \"switchspace\"\n                    }\n                  },\n                  [\n                    _c(\"span\", { attrs: { slot: \"open\" }, slot: \"open\" }, [\n                      _vm._v(\"是\")\n                    ]),\n                    _c(\"span\", { attrs: { slot: \"close\" }, slot: \"close\" }, [\n                      _vm._v(\"否\")\n                    ])\n                  ]\n                )\n              ],\n              1\n            ),\n            _c(\n              \"p\",\n              { staticStyle: { \"word-break\": \"break-all\", padding: \"10px\" } },\n              [\n                _vm._v(\n                  _vm._s(\n                    this.switchspace == true\n                      ? this.afterresultdata.join(\" \")\n                      : this.afterresultdata.join(\"\")\n                  )\n                )\n              ]\n            )\n          ],\n          1\n        ),\n        _c(\n          \"Modal\",\n          {\n            staticClass: \"postresult\",\n            attrs: { title: \"选择要提交的分词\", width: \"600px\" },\n            model: {\n              value: _vm.postkeywordflag,\n              callback: function($$v) {\n                _vm.postkeywordflag = $$v\n              },\n              expression: \"postkeywordflag\"\n            }\n          },\n          [\n            _vm._l(_vm.postword, function(item) {\n              return _c(\n                \"Tag\",\n                {\n                  key: item,\n                  attrs: { name: item, closable: \"\" },\n                  on: { \"on-close\": _vm.postwordClose }\n                },\n                [_vm._v(_vm._s(item))]\n              )\n            }),\n            _vm.postword.length > 0\n              ? _c(\n                  \"Button\",\n                  {\n                    staticClass: \"copydata\",\n                    attrs: { type: \"primary\" },\n                    on: { click: _vm.handlepostword }\n                  },\n                  [_vm._v(\"提交\")]\n                )\n              : _vm._e(),\n            _c(\n              \"div\",\n              { staticClass: \"postitemmain\" },\n              _vm._l(_vm.resultdata, function(item, index) {\n                return _c(\"div\", { staticClass: \"postitem\" }, [\n                  _c(\n                    \"label\",\n                    {\n                      attrs: { for: index + 100000 },\n                      on: {\n                        click: function($event) {\n                          _vm.postitem(index, item)\n                        }\n                      }\n                    },\n                    [\n                      _c(\"input\", {\n                        attrs: { type: \"checkbox\", id: index + 100000 },\n                        domProps: { value: index }\n                      }),\n                      _c(\"span\", { staticStyle: { \"padding-left\": \"5px\" } }, [\n                        _vm._v(_vm._s(item))\n                      ])\n                    ]\n                  )\n                ])\n              })\n            )\n          ],\n          2\n        ),\n        _c(\n          \"Modal\",\n          {\n            attrs: { title: \"下载或上传\" },\n            model: {\n              value: _vm.upfileflag,\n              callback: function($$v) {\n                _vm.upfileflag = $$v\n              },\n              expression: \"upfileflag\"\n            }\n          },\n          [\n            _c(\n              \"div\",\n              { staticClass: \"upfile\" },\n              [\n                _c(\n                  \"p\",\n                  { staticStyle: { \"font-size\": \"18px\", margin: \"15px 0\" } },\n                  [_vm._v(\"当前语言:\" + _vm._s(_vm.languageNamge))]\n                ),\n                _c(\"p\", { staticStyle: { \"font-size\": \"22px\" } }, [\n                  _vm._v(\"请下载或编辑之后上传\")\n                ]),\n                _c(\n                  \"p\",\n                  {\n                    staticClass: \"downloadfile\",\n                    on: { click: _vm.downloadfile }\n                  },\n                  [\n                    _c(\"Icon\", { attrs: { type: \"md-download\" } }),\n                    _c(\"span\", [_vm._v(\"下载\")])\n                  ],\n                  1\n                ),\n                _c(\n                  \"Upload\",\n                  {\n                    staticStyle: {\n                      width: \"50%\",\n                      \"text-align\": \"center\",\n                      margin: \"0 auto\"\n                    },\n                    attrs: {\n                      multiple: \"\",\n                      type: \"drag\",\n                      \"before-upload\": _vm.handleUpload,\n                      action: _vm.actionurl,\n                      \"on-success\": _vm.UploadExcel\n                    }\n                  },\n                  [\n                    _c(\n                      \"div\",\n                      { staticStyle: { padding: \"20px 0\" } },\n                      [\n                        _c(\"Icon\", {\n                          staticStyle: { color: \"#3399ff\" },\n                          attrs: { type: \"ios-cloud-upload\", size: \"52\" }\n                        }),\n                        _c(\"p\", [_vm._v(\"点击并选择你要上传的文件\")])\n                      ],\n                      1\n                    )\n                  ]\n                )\n              ],\n              1\n            )\n          ]\n        )\n      ],\n      1\n    )\n  ])\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}