{"remainingRequest":"/Users/gaga/Desktop/Admin/node_modules/thread-loader/dist/cjs.js!/Users/gaga/Desktop/Admin/node_modules/babel-loader/lib/index.js!/Users/gaga/Desktop/Admin/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/gaga/Desktop/Admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/gaga/Desktop/Admin/src/views/Games/Keywordthink.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/gaga/Desktop/Admin/src/views/Games/Keywordthink.vue","mtime":1595321533063},{"path":"/Users/gaga/Desktop/Admin/node_modules/cache-loader/dist/cjs.js","mtime":1579254447879},{"path":"/Users/gaga/Desktop/Admin/node_modules/thread-loader/dist/cjs.js","mtime":1579254448160},{"path":"/Users/gaga/Desktop/Admin/node_modules/babel-loader/lib/index.js","mtime":1579254436726},{"path":"/Users/gaga/Desktop/Admin/node_modules/cache-loader/dist/cjs.js","mtime":1579254447879},{"path":"/Users/gaga/Desktop/Admin/node_modules/vue-loader/lib/index.js","mtime":1579254448195}],"contextDependencies":[],"result":["import \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/es6.regexp.split\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport Clipboard from \"clipboard\";\nimport { strdata } from \"@/api/data\";\nimport { tree } from \"vued3tree\";\nimport { getThinkword, postThinkword, downloadThinkword, downloadUrl } from \"@/api/index\";\nexport default {\n  components: {\n    tree: tree\n  },\n  data: function data() {\n    return {\n      marginY: 0,\n      duration: 0,\n      treedata: {},\n      word: \"\",\n      loadword: \"\",\n      loading: false,\n      postedloading: true,\n      showresult: false,\n      outputflag: false,\n      switchspace: false,\n      switchbtn: true,\n      tip: \"正在提交\",\n      afterresultdata: [],\n      posteddata: \"\",\n      delword: [],\n      resultdata: []\n    };\n  },\n  mounted: function mounted() {// var that=this;\n    // var treearr=[];\n    // function gettreedata(arr,newarr){\n    //   arr.map((val)=>{\n    //     that.resultdata.push(\n    //       {\n    //         name:val.word,\n    //         index:val.heat\n    //       })\n    //     if(val.childNodes){\n    //       newarr.push({\n    //         name:`${val.word}(${val.heat})`,\n    //         children:gettreedata(val.childNodes,[])\n    //       })\n    //     }else{\n    //       newarr.push({\n    //         name:`${val.word}(${val.heat})`,\n    //       })\n    //     }\n    // })\n    //   return newarr;\n    // }\n    // gettreedata(strdata,treearr);\n    // // console.log(this.resultdata)\n    // function sortarr(arr){\n    //   var max;\n    //   for(var i=0;i<arr.length;i++){\n    //      for(var j=i;j<arr.length;j++){\n    //        if(parseInt(arr[i].index) < parseInt(arr[j].index) ){\n    //          max=arr[j];\n    //          arr[j]=arr[i];\n    //         arr[i]=max;           }\n    //      }\n    //   }\n    // }\n    // sortarr(this.resultdata);\n    // this.resultdata=this.resultdata.map(val=>val.name)\n    // this.treedata={\n    //   name:treearr[0].name,\n    //   children:treearr[0].children\n    // }\n  },\n  methods: {\n    onClick: function onClick(evt) {\n      var el = evt.target;\n      var str = el.innerHTML.split(\"\");\n      str.splice(str.indexOf(\"(\"));\n\n      if (this.delword.indexOf(str.join(\"\")) > -1) {\n        el.style.textDecoration = \"none\";\n        this.delword = this.delword.filter(function (val) {\n          return val != str.join(\"\");\n        });\n      } else {\n        el.style.textDecoration = \"line-through\";\n        this.delword.push(str.join(\"\"));\n      }\n    },\n    suresearch: function suresearch() {\n      var _this = this;\n\n      this.loadword = this.word;\n      this.resultdata = [];\n      this.delword = [];\n      this.treedata = {};\n      this.posteddata = \"\";\n      this.afterresultdata = [];\n      this.loading = false;\n      this.showresult = false;\n      var that = this;\n\n      if (this.word.length > 0) {\n        this.loading = true;\n        getThinkword({\n          keyword: this.word,\n          choose: this.switchbtn ? 0 : 1\n        }).then(function (res) {\n          if (res.code == 1) {\n            var gettreedata = function gettreedata(arr, newarr) {\n              arr.map(function (val) {\n                that.resultdata.push({\n                  name: val.word,\n                  index: val.heat\n                });\n\n                if (val.childNodes) {\n                  newarr.push({\n                    name: \"\".concat(val.word, \"(\").concat(val.heat, \")\"),\n                    children: gettreedata(val.childNodes, [])\n                  });\n                } else {\n                  newarr.push({\n                    name: \"\".concat(val.word, \"(\").concat(val.heat, \")\")\n                  });\n                }\n              });\n              return newarr;\n            };\n\n            var sortarr = function sortarr(arr) {\n              var max;\n\n              for (var i = 0; i < arr.length; i++) {\n                for (var j = i; j < arr.length; j++) {\n                  if (parseInt(arr[i].index) < parseInt(arr[j].index)) {\n                    var _ref = [arr[i], arr[j]];\n                    arr[j] = _ref[0];\n                    arr[i] = _ref[1];\n                  }\n                }\n              }\n            };\n\n            // this.resultdata=res.msg;\n            var treearr = [];\n            gettreedata(res.msg, treearr);\n            _this.treedata = {\n              name: treearr[0].name,\n              children: treearr[0].children\n            };\n            sortarr(_this.resultdata);\n            _this.resultdata = _this.resultdata.map(function (val) {\n              return val.name;\n            });\n            _this.showresult = true;\n            _this.loading = false;\n          } else {\n            _this.loading = false;\n\n            _this.$Message.error(res.msg);\n          }\n        });\n      } else {\n        this.$Message.error(\"输入为空\");\n      }\n    },\n    //  selectitem(index, name) {\n    //   //  console.log(name)\n    //   var item = document.querySelector(\".result\").querySelectorAll(\".item\");\n    //   var input = item[index].querySelector(\"input\");\n    //   if (input.checked) {\n    //     item[index].querySelector(\"span\").className = \"active\";\n    //     if (this.delword.indexOf(name) == -1) {\n    //       this.delword.push(name);\n    //     }\n    //   } else {\n    //     item[index].querySelector(\"span\").className = \"\";\n    //     if (this.delword.indexOf(name) > -1) {\n    //       this.delword = this.delword.filter(item => item != name);\n    //     }\n    //   }\n    // console.log(this.delword)\n    // },\n    postdata: function postdata() {\n      var _this2 = this;\n\n      this.afterresultdata = [];\n      this.resultdata.map(function (item) {\n        if (_this2.delword.indexOf(item) == -1) {\n          _this2.afterresultdata.push(item);\n        }\n      });\n      this.tip = \"正在提交\";\n      this.outputflag = true;\n      this.postedloading = true;\n      postThinkword({\n        keyword: this.word,\n        word: this.afterresultdata.join(\"\"),\n        choose: this.switchbtn ? 0 : 1\n      }).then(function (res) {\n        _this2.tip = \"提交结果\";\n        _this2.postedloading = false;\n        _this2.posteddata = res.msg;\n      });\n    },\n    copy: function copy() {\n      var _this3 = this;\n\n      var clipboard = new Clipboard(\".copydata\");\n      clipboard.on(\"success\", function (e) {\n        _this3.$Message.success(\"复制成功\"); // 释放内存\n\n\n        clipboard.destroy();\n      });\n      clipboard.on(\"error\", function (e) {\n        _this3.$Message.error(\"该浏览器不支持复制\"); // 释放内存\n\n\n        clipboard.destroy();\n      });\n    },\n    download: function download() {\n      var _this4 = this;\n\n      downloadThinkword({\n        keyword: this.loadword\n      }).then(function (res) {\n        if (res.code == 1) {\n          window.open(downloadUrl + res.msg);\n\n          _this4.$Message.success(\"开始下载\");\n        } else {\n          _this4.$Message.error(res.msg);\n        }\n      });\n    }\n  }\n};",{"version":3,"sources":["Keywordthink.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyDA,OAAA,SAAA,MAAA,WAAA;AACA,SAAA,OAAA,QAAA,YAAA;AACA,SAAA,IAAA,QAAA,WAAA;AACA,SACA,YADA,EAEA,aAFA,EAGA,iBAHA,EAIA,WAJA,QAKA,aALA;AAMA,eAAA;AACA,EAAA,UAAA,EAAA;AACA,IAAA,IAAA,EAAA;AADA,GADA;AAIA,EAAA,IAJA,kBAIA;AACA,WAAA;AACA,MAAA,OAAA,EAAA,CADA;AAEA,MAAA,QAAA,EAAA,CAFA;AAGA,MAAA,QAAA,EAAA,EAHA;AAIA,MAAA,IAAA,EAAA,EAJA;AAKA,MAAA,QAAA,EAAA,EALA;AAMA,MAAA,OAAA,EAAA,KANA;AAOA,MAAA,aAAA,EAAA,IAPA;AAQA,MAAA,UAAA,EAAA,KARA;AASA,MAAA,UAAA,EAAA,KATA;AAUA,MAAA,WAAA,EAAA,KAVA;AAWA,MAAA,SAAA,EAAA,IAXA;AAYA,MAAA,GAAA,EAAA,MAZA;AAaA,MAAA,eAAA,EAAA,EAbA;AAcA,MAAA,UAAA,EAAA,EAdA;AAeA,MAAA,OAAA,EAAA,EAfA;AAgBA,MAAA,UAAA,EAAA;AAhBA,KAAA;AAkBA,GAvBA;AAwBA,EAAA,OAxBA,qBAwBA,CACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAlEA;AAmEA,EAAA,OAAA,EAAA;AACA,IAAA,OADA,mBACA,GADA,EACA;AACA,UAAA,EAAA,GAAA,GAAA,CAAA,MAAA;AACA,UAAA,GAAA,GAAA,EAAA,CAAA,SAAA,CAAA,KAAA,CAAA,EAAA,CAAA;AACA,MAAA,GAAA,CAAA,MAAA,CAAA,GAAA,CAAA,OAAA,CAAA,GAAA,CAAA;;AACA,UAAA,KAAA,OAAA,CAAA,OAAA,CAAA,GAAA,CAAA,IAAA,CAAA,EAAA,CAAA,IAAA,CAAA,CAAA,EAAA;AACA,QAAA,EAAA,CAAA,KAAA,CAAA,cAAA,GAAA,MAAA;AACA,aAAA,OAAA,GAAA,KAAA,OAAA,CAAA,MAAA,CAAA,UAAA,GAAA;AAAA,iBAAA,GAAA,IAAA,GAAA,CAAA,IAAA,CAAA,EAAA,CAAA;AAAA,SAAA,CAAA;AACA,OAHA,MAGA;AACA,QAAA,EAAA,CAAA,KAAA,CAAA,cAAA,GAAA,cAAA;AACA,aAAA,OAAA,CAAA,IAAA,CAAA,GAAA,CAAA,IAAA,CAAA,EAAA,CAAA;AACA;AACA,KAZA;AAaA,IAAA,UAbA,wBAaA;AAAA;;AACA,WAAA,QAAA,GAAA,KAAA,IAAA;AACA,WAAA,UAAA,GAAA,EAAA;AACA,WAAA,OAAA,GAAA,EAAA;AACA,WAAA,QAAA,GAAA,EAAA;AACA,WAAA,UAAA,GAAA,EAAA;AACA,WAAA,eAAA,GAAA,EAAA;AACA,WAAA,OAAA,GAAA,KAAA;AACA,WAAA,UAAA,GAAA,KAAA;AACA,UAAA,IAAA,GAAA,IAAA;;AACA,UAAA,KAAA,IAAA,CAAA,MAAA,GAAA,CAAA,EAAA;AACA,aAAA,OAAA,GAAA,IAAA;AACA,QAAA,YAAA,CAAA;AACA,UAAA,OAAA,EAAA,KAAA,IADA;AAEA,UAAA,MAAA,EAAA,KAAA,SAAA,GAAA,CAAA,GAAA;AAFA,SAAA,CAAA,CAGA,IAHA,CAGA,UAAA,GAAA,EAAA;AACA,cAAA,GAAA,CAAA,IAAA,IAAA,CAAA,EAAA;AAAA,gBAGA,WAHA,GAGA,SAAA,WAAA,CAAA,GAAA,EAAA,MAAA,EAAA;AACA,cAAA,GAAA,CAAA,GAAA,CAAA,UAAA,GAAA,EAAA;AACA,gBAAA,IAAA,CAAA,UAAA,CAAA,IAAA,CAAA;AACA,kBAAA,IAAA,EAAA,GAAA,CAAA,IADA;AAEA,kBAAA,KAAA,EAAA,GAAA,CAAA;AAFA,iBAAA;;AAIA,oBAAA,GAAA,CAAA,UAAA,EAAA;AACA,kBAAA,MAAA,CAAA,IAAA,CAAA;AACA,oBAAA,IAAA,YAAA,GAAA,CAAA,IAAA,cAAA,GAAA,CAAA,IAAA,MADA;AAEA,oBAAA,QAAA,EAAA,WAAA,CAAA,GAAA,CAAA,UAAA,EAAA,EAAA;AAFA,mBAAA;AAIA,iBALA,MAKA;AACA,kBAAA,MAAA,CAAA,IAAA,CAAA;AACA,oBAAA,IAAA,YAAA,GAAA,CAAA,IAAA,cAAA,GAAA,CAAA,IAAA;AADA,mBAAA;AAGA;AACA,eAfA;AAgBA,qBAAA,MAAA;AACA,aArBA;;AAAA,gBA6BA,OA7BA,GA6BA,SAAA,OAAA,CAAA,GAAA,EAAA;AACA,kBAAA,GAAA;;AACA,mBAAA,IAAA,CAAA,GAAA,CAAA,EAAA,CAAA,GAAA,GAAA,CAAA,MAAA,EAAA,CAAA,EAAA,EAAA;AACA,qBAAA,IAAA,CAAA,GAAA,CAAA,EAAA,CAAA,GAAA,GAAA,CAAA,MAAA,EAAA,CAAA,EAAA,EAAA;AACA,sBAAA,QAAA,CAAA,GAAA,CAAA,CAAA,CAAA,CAAA,KAAA,CAAA,GAAA,QAAA,CAAA,GAAA,CAAA,CAAA,CAAA,CAAA,KAAA,CAAA,EAAA;AAAA,+BACA,CAAA,GAAA,CAAA,CAAA,CAAA,EAAA,GAAA,CAAA,CAAA,CAAA,CADA;AACA,oBAAA,GAAA,CAAA,CAAA,CADA;AACA,oBAAA,GAAA,CAAA,CAAA,CADA;AAEA;AACA;AACA;AACA,aAtCA;;AACA;AACA,gBAAA,OAAA,GAAA,EAAA;AAoBA,YAAA,WAAA,CAAA,GAAA,CAAA,GAAA,EAAA,OAAA,CAAA;AAEA,YAAA,KAAA,CAAA,QAAA,GAAA;AACA,cAAA,IAAA,EAAA,OAAA,CAAA,CAAA,CAAA,CAAA,IADA;AAEA,cAAA,QAAA,EAAA,OAAA,CAAA,CAAA,CAAA,CAAA;AAFA,aAAA;AAeA,YAAA,OAAA,CAAA,KAAA,CAAA,UAAA,CAAA;AACA,YAAA,KAAA,CAAA,UAAA,GAAA,KAAA,CAAA,UAAA,CAAA,GAAA,CAAA,UAAA,GAAA;AAAA,qBAAA,GAAA,CAAA,IAAA;AAAA,aAAA,CAAA;AACA,YAAA,KAAA,CAAA,UAAA,GAAA,IAAA;AACA,YAAA,KAAA,CAAA,OAAA,GAAA,KAAA;AACA,WA3CA,MA2CA;AACA,YAAA,KAAA,CAAA,OAAA,GAAA,KAAA;;AACA,YAAA,KAAA,CAAA,QAAA,CAAA,KAAA,CAAA,GAAA,CAAA,GAAA;AACA;AACA,SAnDA;AAoDA,OAtDA,MAsDA;AACA,aAAA,QAAA,CAAA,KAAA,CAAA,MAAA;AACA;AACA,KAhFA;AAiFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAA,QAlGA,sBAkGA;AAAA;;AACA,WAAA,eAAA,GAAA,EAAA;AACA,WAAA,UAAA,CAAA,GAAA,CAAA,UAAA,IAAA,EAAA;AACA,YAAA,MAAA,CAAA,OAAA,CAAA,OAAA,CAAA,IAAA,KAAA,CAAA,CAAA,EAAA;AACA,UAAA,MAAA,CAAA,eAAA,CAAA,IAAA,CAAA,IAAA;AACA;AACA,OAJA;AAKA,WAAA,GAAA,GAAA,MAAA;AACA,WAAA,UAAA,GAAA,IAAA;AACA,WAAA,aAAA,GAAA,IAAA;AACA,MAAA,aAAA,CAAA;AACA,QAAA,OAAA,EAAA,KAAA,IADA;AAEA,QAAA,IAAA,EAAA,KAAA,eAAA,CAAA,IAAA,CAAA,EAAA,CAFA;AAGA,QAAA,MAAA,EAAA,KAAA,SAAA,GAAA,CAAA,GAAA;AAHA,OAAA,CAAA,CAIA,IAJA,CAIA,UAAA,GAAA,EAAA;AACA,QAAA,MAAA,CAAA,GAAA,GAAA,MAAA;AACA,QAAA,MAAA,CAAA,aAAA,GAAA,KAAA;AACA,QAAA,MAAA,CAAA,UAAA,GAAA,GAAA,CAAA,GAAA;AACA,OARA;AASA,KArHA;AAsHA,IAAA,IAtHA,kBAsHA;AAAA;;AACA,UAAA,SAAA,GAAA,IAAA,SAAA,CAAA,WAAA,CAAA;AACA,MAAA,SAAA,CAAA,EAAA,CAAA,SAAA,EAAA,UAAA,CAAA,EAAA;AACA,QAAA,MAAA,CAAA,QAAA,CAAA,OAAA,CAAA,MAAA,EADA,CAEA;;;AACA,QAAA,SAAA,CAAA,OAAA;AACA,OAJA;AAKA,MAAA,SAAA,CAAA,EAAA,CAAA,OAAA,EAAA,UAAA,CAAA,EAAA;AACA,QAAA,MAAA,CAAA,QAAA,CAAA,KAAA,CAAA,WAAA,EADA,CAEA;;;AACA,QAAA,SAAA,CAAA,OAAA;AACA,OAJA;AAKA,KAlIA;AAmIA,IAAA,QAnIA,sBAmIA;AAAA;;AACA,MAAA,iBAAA,CAAA;AAAA,QAAA,OAAA,EAAA,KAAA;AAAA,OAAA,CAAA,CAAA,IAAA,CAAA,UAAA,GAAA,EAAA;AACA,YAAA,GAAA,CAAA,IAAA,IAAA,CAAA,EAAA;AACA,UAAA,MAAA,CAAA,IAAA,CAAA,WAAA,GAAA,GAAA,CAAA,GAAA;;AACA,UAAA,MAAA,CAAA,QAAA,CAAA,OAAA,CAAA,MAAA;AACA,SAHA,MAGA;AACA,UAAA,MAAA,CAAA,QAAA,CAAA,KAAA,CAAA,GAAA,CAAA,GAAA;AACA;AACA,OAPA;AAQA;AA5IA;AAnEA,CAAA","sourcesContent":["<template>\n  <div class=\"all\">\n    <div class=\"main\">\n      <p>输入关键词</p>\n      <i-input size=\"large\" style=\"width: 400px;display:none\"></i-input>\n      <i-input\n        v-model=\"word\"\n        size=\"large\"\n        placeholder=\"请输入关键词...\"\n        style=\"width: 50%\"\n        @keyup.enter.native=\"suresearch\"\n      >\n        <i-button slot=\"append\" icon=\"ios-search\" @click=\"suresearch\"></i-button>\n      </i-input>\n      <div class=\"switch\" style=\"width:50%;margin-top:20px\">\n        <span style=\"font-size:12px\">删除重复词</span>\n\n        <i-switch v-model=\"switchbtn\" style=\"margin-left:10px\">\n          <span slot=\"open\">是</span>\n          <span slot=\"close\">否</span>\n        </i-switch>\n      </div>\n    </div>\n    <Spin v-if=\"loading\" class=\"loading\" size=\"large\"></Spin>\n\n    <div class=\"result\" v-if=\"showresult\">\n      <p>搜索结果</p>\n      <div class=\"download\">\n        <Button type=\"primary\" @click=\"download\">下载</Button>\n      </div>\n      <tree\n        :data=\"treedata\"\n        :marginY=\"marginY\"\n        :duration=\"duration\"\n        node-text=\"name\"\n        layoutType=\"horizontal\"\n        linkLayout=\"bezier\"\n        type=\"tree\"\n        @clickedText=\"onClick\"\n      ></tree>\n\n      <div class=\"sure\">\n        <Button type=\"primary\" @click=\"postdata\">提交</Button>\n      </div>\n    </div>\n    <!-- 显示筛选过后结果 -->\n    <Modal v-model=\"outputflag\" :title=\"tip\">\n      <Spin v-if=\"postedloading\" class=\"postloading\" size=\"large\"></Spin>\n      <div v-if=\"!postedloading\">\n        <Button class=\"copydata\" type=\"primary\" @click=\"copy\" :data-clipboard-text=\"posteddata\">复制结果</Button>\n        <p style=\"padding:10px\">{{ posteddata}}</p>\n      </div>\n    </Modal>\n  </div>\n</template>\n\n<script>\nimport Clipboard from \"clipboard\";\nimport { strdata } from \"@/api/data\";\nimport { tree } from \"vued3tree\";\nimport {\n  getThinkword,\n  postThinkword,\n  downloadThinkword,\n  downloadUrl\n} from \"@/api/index\";\nexport default {\n  components: {\n    tree\n  },\n  data() {\n    return {\n      marginY: 0,\n      duration: 0,\n      treedata: {},\n      word: \"\",\n      loadword: \"\",\n      loading: false,\n      postedloading: true,\n      showresult: false,\n      outputflag: false,\n      switchspace: false,\n      switchbtn: true,\n      tip: \"正在提交\",\n      afterresultdata: [],\n      posteddata: \"\",\n      delword: [],\n      resultdata: []\n    };\n  },\n  mounted() {\n    // var that=this;\n    // var treearr=[];\n    // function gettreedata(arr,newarr){\n    //   arr.map((val)=>{\n    //     that.resultdata.push(\n    //       {\n    //         name:val.word,\n    //         index:val.heat\n    //       })\n    //     if(val.childNodes){\n    //       newarr.push({\n    //         name:`${val.word}(${val.heat})`,\n    //         children:gettreedata(val.childNodes,[])\n    //       })\n    //     }else{\n    //       newarr.push({\n    //         name:`${val.word}(${val.heat})`,\n    //       })\n    //     }\n    // })\n    //   return newarr;\n    // }\n    // gettreedata(strdata,treearr);\n    // // console.log(this.resultdata)\n    // function sortarr(arr){\n    //   var max;\n    //   for(var i=0;i<arr.length;i++){\n    //      for(var j=i;j<arr.length;j++){\n    //        if(parseInt(arr[i].index) < parseInt(arr[j].index) ){\n    //          max=arr[j];\n    //          arr[j]=arr[i];\n    //         arr[i]=max;           }\n    //      }\n    //   }\n    // }\n    // sortarr(this.resultdata);\n    // this.resultdata=this.resultdata.map(val=>val.name)\n    // this.treedata={\n    //   name:treearr[0].name,\n    //   children:treearr[0].children\n    // }\n  },\n  methods: {\n    onClick(evt) {\n      var el = evt.target;\n      var str = el.innerHTML.split(\"\");\n      str.splice(str.indexOf(\"(\"));\n      if (this.delword.indexOf(str.join(\"\")) > -1) {\n        el.style.textDecoration = \"none\";\n        this.delword = this.delword.filter(val => val != str.join(\"\"));\n      } else {\n        el.style.textDecoration = \"line-through\";\n        this.delword.push(str.join(\"\"));\n      }\n    },\n    suresearch() {\n      this.loadword = this.word;\n      this.resultdata = [];\n      this.delword = [];\n      this.treedata = {};\n      this.posteddata = \"\";\n      this.afterresultdata = [];\n      this.loading = false;\n      this.showresult = false;\n      var that = this;\n      if (this.word.length > 0) {\n        this.loading = true;\n        getThinkword({\n          keyword: this.word,\n          choose: this.switchbtn ? 0 : 1\n        }).then(res => {\n          if (res.code == 1) {\n            // this.resultdata=res.msg;\n            var treearr = [];\n            function gettreedata(arr, newarr) {\n              arr.map(val => {\n                that.resultdata.push({\n                  name: val.word,\n                  index: val.heat\n                });\n                if (val.childNodes) {\n                  newarr.push({\n                    name: `${val.word}(${val.heat})`,\n                    children: gettreedata(val.childNodes, [])\n                  });\n                } else {\n                  newarr.push({\n                    name: `${val.word}(${val.heat})`\n                  });\n                }\n              });\n              return newarr;\n            }\n            gettreedata(res.msg, treearr);\n\n            this.treedata = {\n              name: treearr[0].name,\n              children: treearr[0].children\n            };\n\n            function sortarr(arr) {\n              var max;\n              for (var i = 0; i < arr.length; i++) {\n                for (var j = i; j < arr.length; j++) {\n                  if (parseInt(arr[i].index) < parseInt(arr[j].index)) {\n                    [arr[j], arr[i]] = [arr[i], arr[j]];\n                  }\n                }\n              }\n            }\n            sortarr(this.resultdata);\n            this.resultdata = this.resultdata.map(val => val.name);\n            this.showresult = true;\n            this.loading = false;\n          } else {\n            this.loading = false;\n            this.$Message.error(res.msg);\n          }\n        });\n      } else {\n        this.$Message.error(\"输入为空\");\n      }\n    },\n    //  selectitem(index, name) {\n    //   //  console.log(name)\n    //   var item = document.querySelector(\".result\").querySelectorAll(\".item\");\n    //   var input = item[index].querySelector(\"input\");\n    //   if (input.checked) {\n    //     item[index].querySelector(\"span\").className = \"active\";\n    //     if (this.delword.indexOf(name) == -1) {\n    //       this.delword.push(name);\n    //     }\n    //   } else {\n    //     item[index].querySelector(\"span\").className = \"\";\n    //     if (this.delword.indexOf(name) > -1) {\n    //       this.delword = this.delword.filter(item => item != name);\n    //     }\n    //   }\n    // console.log(this.delword)\n    // },\n    postdata() {\n      this.afterresultdata = [];\n      this.resultdata.map(item => {\n        if (this.delword.indexOf(item) == -1) {\n          this.afterresultdata.push(item);\n        }\n      });\n      this.tip = \"正在提交\";\n      this.outputflag = true;\n      this.postedloading = true;\n      postThinkword({\n        keyword: this.word,\n        word: this.afterresultdata.join(\"\"),\n        choose: this.switchbtn ? 0 : 1\n      }).then(res => {\n        this.tip = \"提交结果\";\n        this.postedloading = false;\n        this.posteddata = res.msg;\n      });\n    },\n    copy() {\n      var clipboard = new Clipboard(\".copydata\");\n      clipboard.on(\"success\", e => {\n        this.$Message.success(\"复制成功\");\n        // 释放内存\n        clipboard.destroy();\n      });\n      clipboard.on(\"error\", e => {\n        this.$Message.error(\"该浏览器不支持复制\");\n        // 释放内存\n        clipboard.destroy();\n      });\n    },\n    download() {\n      downloadThinkword({ keyword: this.loadword }).then(res => {\n        if (res.code == 1) {\n          window.open(downloadUrl + res.msg);\n          this.$Message.success(\"开始下载\");\n        } else {\n          this.$Message.error(res.msg);\n        }\n      });\n    }\n  }\n};\n</script>\n\n<style scoped>\n.all {\n  height: 100%;\n  /* background: red; */\n  box-sizing: border-box;\n  padding: 10px 0 0 0;\n}\n.main {\n  width: 90%;\n  height: 20%;\n  margin: 0 auto;\n  background: #fff;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n  margin-bottom: 20px;\n}\n.main p:nth-child(1) {\n  margin-bottom: 20px;\n  font-weight: bold;\n  font-size: 18px;\n}\n.result {\n  width: 90%;\n  height: 130%;\n  margin: 0 auto;\n  background: #fff;\n  padding: 30px;\n\n  box-sizing: border-box;\n}\n\n.result .sure {\n  /* width: 50%; */\n  /* background: pink; */\n  margin: 0 auto;\n  text-align: center;\n}\n.loading {\n  display: flex;\n  justify-content: center;\n  margin-top: 100px;\n}\n.postloading {\n  display: flex;\n  justify-content: center;\n  margin-top: 20px;\n}\n.download {\n  display: flex;\n  justify-content: flex-end;\n}\n.result > p {\n  text-align: center;\n  padding: 15px;\n  font-size: 20px;\n}\n.result > span {\n  float: right;\n  font-size: 15px;\n  color: red;\n  cursor: pointer;\n  text-decoration: underline;\n}\n.result .itembox {\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: flex-start;\n  align-items: center;\n  padding-left: 50px;\n}\n.result .itembox .item {\n  width: 20%;\n  text-align: left;\n  margin-bottom: 10px;\n  /* background: red; */\n}\n.item .active {\n  text-decoration: line-through;\n}\n.copydata {\n  margin-bottom: 10px;\n}\n.treeclass {\n  height: 90%;\n}\n@media screen and (max-width: 1600px) {\n  .result .itembox .item {\n    width: 25%;\n    text-align: left;\n    margin-bottom: 10px;\n  }\n}\n@media screen and (max-width: 1400px) {\n  .result .itembox .item {\n    width: 33%;\n    text-align: left;\n    margin-bottom: 10px;\n  }\n  /* .result .itembox .item:nth-child(2n){\n    background: #ccc;\n\n  } */\n}\n@media screen and (max-width: 1200px) {\n  .result .itembox .item {\n    width: 50%;\n    text-align: left;\n    margin-bottom: 10px;\n  }\n}\n@media screen and (max-width: 1000px) {\n  .result .itembox .item {\n    width: 50%;\n    text-align: left;\n    margin-bottom: 10px;\n  }\n}\n@media screen and (max-width: 800px) {\n  .result .itembox .item {\n    width: 50%;\n    text-align: left;\n    margin-bottom: 10px;\n  }\n}\n</style>\n\n"],"sourceRoot":"src/views/Games"}]}